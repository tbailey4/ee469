$date
	Thu Feb 09 21:53:19 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testBench $end
$scope module my_aluDemo $end
$var wire 1 ! Carry $end
$var wire 16 " HEX0 [15:0] $end
$var wire 16 # HEX1 [15:0] $end
$var wire 16 $ HEX2 [15:0] $end
$var wire 16 % HEX3 [15:0] $end
$var wire 2 & KEY [1:0] $end
$var wire 1 ' Overflow $end
$var wire 10 ( SW [9:0] $end
$var wire 1 ) clk $end
$var wire 32 * outBus [31:0] $end
$var wire 1 + Zero $end
$var wire 1 , Negative $end
$var reg 32 - BusA [31:0] $end
$var reg 32 . BusB [31:0] $end
$var reg 3 / Control [2:0] $end
$var reg 3 0 PrevControl [2:0] $end
$var reg 32 1 TempBusA [31:0] $end
$var reg 32 2 TempBusB [31:0] $end
$var reg 32 3 TempOutBus [31:0] $end
$var reg 16 4 tHex0 [15:0] $end
$var reg 16 5 tHex1 [15:0] $end
$var reg 16 6 tHex2 [15:0] $end
$var reg 16 7 tHex3 [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
bx 0
b0 /
b0 .
b0 -
x,
x+
bz *
x)
bx (
z'
bx &
b0 %
b0 $
b0 #
b0 "
z!
$end
#1
b0 &
b0 (
1)
#2
0)
#3
b1 %
b1 7
b10000000000000000 1
b1000 (
1)
#4
0)
#5
b1 #
b1 5
b10000000000000000 -
b1 &
b1010000 (
1)
#6
0)
#7
0,
0+
b10000000000000000 *
b101 0
b101 /
b10 &
1)
#8
b10000000000000000 3
0)
#9
x,
x+
bz *
b0 /
b0 &
1)
#10
0)
#11
b101 %
b101 7
b101 $
b101 6
b1001010000 (
1)
#12
0)
#13
1)
#14
0)
#15
1)
#16
0)
#17
1)
#18
0)
#19
b0 %
b0 7
b1000000000 (
1)
#20
0)
#21
1)
#22
0)
#23
1)
#24
0)
#25
1)
#26
0)
#27
1)
#28
0)
#29
1)
#30
0)
#31
1)
#32
0)
#33
1)
#34
0)
#35
1)
#36
0)
#37
1)
#38
0)
#39
1)
#40
0)
#41
1)
#42
0)
#43
1)
#44
0)
#45
1)
#46
0)
#47
1)
#48
0)
#49
1)
#50
0)
#51
1)
#52
0)
#53
1)
#54
0)
#55
1)
#56
0)
#57
1)
#58
0)
#59
1)
#60
0)
#61
1)
#62
0)
