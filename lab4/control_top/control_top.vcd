$date
	Fri Mar 03 03:14:33 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module control_top_tb $end
$scope module myTester $end
$var wire 1 ! Bselect $end
$var wire 1 " Dselect $end
$var wire 1 # OE $end
$var wire 1 $ SRAM_CS $end
$var wire 1 % SRAM_write $end
$var wire 3 & alu_function [2:0] $end
$var wire 32 ' constant [31:0] $end
$var wire 5 ( read1_addr [4:0] $end
$var wire 5 ) read2_addr [4:0] $end
$var wire 1 * writeToSRAM $end
$var wire 5 + write_addr [4:0] $end
$var wire 1 , write_en $end
$var reg 1 - C $end
$var reg 1 . N $end
$var reg 1 / V $end
$var reg 1 0 Z $end
$var reg 1 1 clk $end
$var reg 1 2 controlSuspend $end
$var reg 32 3 register_data [31:0] $end
$var reg 1 4 rst $end
$var integer 32 5 i [31:0] $end
$upscope $end
$upscope $end
$scope module control_top_tb $end
$scope module myControl $end
$var wire 32 6 instruction [31:0] $end
$var wire 1 * writeToSRAM $end
$var wire 1 , write_en $end
$var wire 5 7 write_addr [4:0] $end
$var wire 1 4 rst $end
$var wire 32 8 register_data [31:0] $end
$var wire 5 9 read2_addr [4:0] $end
$var wire 5 : read1_addr [4:0] $end
$var wire 11 ; opcode [10:0] $end
$var wire 1 2 controlSuspend $end
$var wire 32 < constant [31:0] $end
$var wire 1 1 clk $end
$var wire 7 = branch [6:0] $end
$var wire 3 > alu_function [2:0] $end
$var wire 1 0 Z $end
$var wire 1 / V $end
$var wire 1 % SRAM_write $end
$var wire 1 $ SRAM_CS $end
$var wire 1 # OE $end
$var wire 1 . N $end
$var wire 4 ? FLAGS [3:0] $end
$var wire 1 " Dselect $end
$var wire 18 @ COND_BR_address [17:0] $end
$var wire 1 - C $end
$var wire 1 ! Bselect $end
$var wire 26 A BR_Address [25:0] $end
$var reg 7 B nextPcounter [6:0] $end
$var reg 7 C pcounter [6:0] $end
$var reg 1 D write_enable $end
$var integer 32 E i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000 E
0D
b0 C
b1 B
bx A
bx @
bx ?
bx >
bx =
bx <
b1001000100 ;
bx :
bx 9
bx 8
bx 7
b10010001000000000001110000001001 6
bx 5
x4
bx 3
x2
x1
x0
x/
x.
x-
x,
bx +
z*
bx )
bx (
bx '
bx &
x%
x$
x#
x"
x!
$end
#1
b0 B
1,
12
01
#3
0"
0%
0$
b0 =
b1 &
b1 >
0,
b1001 +
b1001 7
b0 (
b0 :
b111 '
b111 <
1!
1#
11
#4
1,
01
#5
0,
11
#6
1,
01
#7
0,
11
#8
1,
01
#9
0,
11
#10
1,
b0 5
01
#11
b1 B
0,
02
11
#12
1,
b1 5
01
#13
b10 B
0#
1$
b0 '
b0 <
b10011 (
b10011 :
b1001 )
b1001 9
b11111000000 ;
b11111000000000000000001001101001 6
b1 C
0,
11
#14
1%
b10 5
01
#15
b11 B
0$
b1010 +
b1010 7
bx )
bx 9
b0 (
b0 :
b101 '
b101 <
1#
b1001000100 ;
b10010001000000000001010000001010 6
b10 C
0%
11
#16
1,
b11 5
01
#17
b100 B
0#
1$
b1 '
b1 <
b10011 (
b10011 :
b1010 )
b1010 9
b11111000000 ;
b11111000000000000001001001101010 6
b11 C
0,
11
#18
1%
b100 5
01
#19
b101 B
0$
b1011 +
b1011 7
bx )
bx 9
b0 (
b0 :
b10 '
b10 <
1#
b1001000100 ;
b10010001000000000000100000001011 6
b100 C
0%
11
#20
1,
b101 5
01
#21
b110 B
0#
1$
b10011 (
b10011 :
b1011 )
b1011 9
b11111000000 ;
b11111000000000000010001001101011 6
b101 C
0,
11
#22
1%
b110 5
01
#23
b111 B
0$
b1100 +
b1100 7
bx )
bx 9
b0 (
b0 :
b100 '
b100 <
1#
b1001000100 ;
b10010001000000000001000000001100 6
b110 C
0%
11
#24
1,
b111 5
01
#25
b1000 B
0#
1$
b11 '
b11 <
b10011 (
b10011 :
b1100 )
b1100 9
b11111000000 ;
b11111000000000000011001001101100 6
b111 C
0,
11
#26
1%
b1000 5
01
#27
b1001 B
1"
b1001 +
b1001 7
b0 '
b0 <
1#
b11111000010 ;
b11111000010000000000001001101001 6
b1000 C
0%
11
#28
1,
b1001 5
01
#29
b1010 B
b1010 +
b1010 7
b1 '
b1 <
b11111000010000000001001001101010 6
b1001 C
0,
11
#30
1,
b1010 5
01
#31
b1011 B
0"
0$
b1011 +
b1011 7
b1010 )
b1010 9
b1001 (
b1001 :
0!
b11001011000 ;
b11001011000010100000000100101011 6
b1010 C
0,
11
#32
1,
b1011 5
01
#33
b1100 B
b1100 +
b1100 7
b0 (
b0 :
b11 '
b11 <
1!
b1001000100 ;
b10010001000000000000110000001100 6
b1011 C
0,
11
#34
1,
b1100 5
01
#35
b1101 B
b0 +
b0 7
b1100 )
b1100 9
b1011 (
b1011 :
0!
b11101011000 ;
b11101011000011000000000101100000 6
b1100 C
0,
11
#36
1,
b1101 5
01
#37
b111 B
b111 @
b1010100 ;
b1010100000000000000000011100000 6
b1101 C
0,
11
#38
b1110 5
01
#39
b1000 B
0#
1$
1!
b10011 (
b10011 :
b11111000000 ;
b11111000000000000011001001101100 6
b111 C
11
#40
1%
b1111 5
01
#41
b1001 B
1"
b1001 +
b1001 7
b0 '
b0 <
1#
b11111000010 ;
b11111000010000000000001001101001 6
b1000 C
0%
11
#42
1,
b10000 5
01
#43
b1010 B
b1010 +
b1010 7
b1 '
b1 <
b11111000010000000001001001101010 6
b1001 C
0,
11
#44
1,
b10001 5
01
#45
b1011 B
0"
0$
b1011 +
b1011 7
b1010 )
b1010 9
b1001 (
b1001 :
0!
b11001011000 ;
b11001011000010100000000100101011 6
b1010 C
0,
11
#46
1,
b10010 5
01
#47
b1100 B
b1100 +
b1100 7
b0 (
b0 :
b11 '
b11 <
1!
b1001000100 ;
b10010001000000000000110000001100 6
b1011 C
0,
11
#48
1,
b10011 5
01
#49
b1101 B
b0 +
b0 7
b1100 )
b1100 9
b1011 (
b1011 :
0!
b11101011000 ;
b11101011000011000000000101100000 6
b1100 C
0,
11
#50
1,
b10100 5
01
#51
b111 B
b1010100 ;
b1010100000000000000000011100000 6
b1101 C
0,
11
#52
b10101 5
01
#53
b1000 B
0#
1$
1!
b10011 (
b10011 :
b11111000000 ;
b11111000000000000011001001101100 6
b111 C
11
#54
1%
b10110 5
01
#55
b1001 B
1"
b1001 +
b1001 7
b0 '
b0 <
1#
b11111000010 ;
b11111000010000000000001001101001 6
b1000 C
0%
11
#56
1,
b10111 5
01
#57
b1010 B
b1010 +
b1010 7
b1 '
b1 <
b11111000010000000001001001101010 6
b1001 C
0,
11
#58
1,
b11000 5
01
#59
b1011 B
0"
0$
b1011 +
b1011 7
b1010 )
b1010 9
b1001 (
b1001 :
0!
b11001011000 ;
b11001011000010100000000100101011 6
b1010 C
0,
11
#60
1,
b11001 5
01
#61
b1100 B
b1100 +
b1100 7
b0 (
b0 :
b11 '
b11 <
1!
b1001000100 ;
b10010001000000000000110000001100 6
b1011 C
0,
11
#62
1,
b11010 5
01
#63
b1101 B
b0 +
b0 7
b1100 )
b1100 9
b1011 (
b1011 :
0!
b11101011000 ;
b11101011000011000000000101100000 6
b1100 C
0,
11
#64
1,
b11011 5
01
#65
b111 B
b1010100 ;
b1010100000000000000000011100000 6
b1101 C
0,
11
#66
b11100 5
01
#67
b1000 B
0#
1$
1!
b10011 (
b10011 :
b11111000000 ;
b11111000000000000011001001101100 6
b111 C
11
#68
1%
b11101 5
01
#69
b1001 B
1"
b1001 +
b1001 7
b0 '
b0 <
1#
b11111000010 ;
b11111000010000000000001001101001 6
b1000 C
0%
11
#70
1,
b11110 5
01
#71
b1010 B
b1010 +
b1010 7
b1 '
b1 <
b11111000010000000001001001101010 6
b1001 C
0,
11
#72
1,
b11111 5
01
#73
b1011 B
0"
0$
b1011 +
b1011 7
b1010 )
b1010 9
b1001 (
b1001 :
0!
b11001011000 ;
b11001011000010100000000100101011 6
b1010 C
0,
11
#74
1,
b100000 5
01
#75
b1100 B
b1100 +
b1100 7
b0 (
b0 :
b11 '
b11 <
1!
b1001000100 ;
b10010001000000000000110000001100 6
b1011 C
0,
11
#76
1,
b100001 5
01
#77
b1101 B
b0 +
b0 7
b1100 )
b1100 9
b1011 (
b1011 :
0!
b11101011000 ;
b11101011000011000000000101100000 6
b1100 C
0,
11
#78
1,
b100010 5
01
#79
b111 B
b1010100 ;
b1010100000000000000000011100000 6
b1101 C
0,
11
#80
b100011 5
01
#81
b1000 B
0#
1$
1!
b10011 (
b10011 :
b11111000000 ;
b11111000000000000011001001101100 6
b111 C
11
#82
1%
b100100 5
01
#83
b1001 B
1"
b1001 +
b1001 7
b0 '
b0 <
1#
b11111000010 ;
b11111000010000000000001001101001 6
b1000 C
0%
11
#84
1,
b100101 5
01
#85
b1010 B
b1010 +
b1010 7
b1 '
b1 <
b11111000010000000001001001101010 6
b1001 C
0,
11
#86
1,
b100110 5
01
#87
b1011 B
0"
0$
b1011 +
b1011 7
b1010 )
b1010 9
b1001 (
b1001 :
0!
b11001011000 ;
b11001011000010100000000100101011 6
b1010 C
0,
11
#88
1,
b100111 5
01
#89
b1100 B
b1100 +
b1100 7
b0 (
b0 :
b11 '
b11 <
1!
b1001000100 ;
b10010001000000000000110000001100 6
b1011 C
0,
11
#90
1,
b101000 5
01
